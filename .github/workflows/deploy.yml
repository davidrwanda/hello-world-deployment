name: Deploy to Kubernetes

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'staging'
        options:
          - staging
          - production

jobs:
  check-submodule:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Check for submodule changes
      id: check_submodule
      run: |
        cd hello-world-repo
        
        # Fetch all branches from the remote
        git fetch origin
        
        # List all branches to verify
        git branch -r
        
        # Check out the 'develop' branch
        git checkout -B develop origin/develop
        
        # Check for changes in the 'develop' branch
        LOCAL_DEVELOP=$(git rev-parse HEAD)
        git fetch origin develop
        REMOTE_DEVELOP=$(git rev-parse origin/develop)
        
        # Check out the 'main' branch
        git checkout -B main origin/main
        
        # Check for changes in the 'main' branch
        LOCAL_MAIN=$(git rev-parse HEAD)
        git fetch origin main
        REMOTE_MAIN=$(git rev-parse origin/main)
        
        if [ "$LOCAL_DEVELOP" != "$REMOTE_DEVELOP" ] || [ "$LOCAL_MAIN" != "$REMOTE_MAIN" ]; then
          echo "Submodule has changed"
          echo "::set-output name=changed::true"
        else
          echo "No changes in submodule"
          echo "::set-output name=changed::false"
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-submodule
    if: needs.check-submodule.outputs.changed == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Get Branch and Version
      run: |
        cd hello-world-repo
        BRANCH_NAME=$(git symbolic-ref --short HEAD || echo "detached")
        VERSION_TAG=$(git describe --tags --abbrev=0 || git rev-parse --short HEAD)
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        BRANCH_NAME: ${{ env.BRANCH_NAME }}
        VERSION_TAG: ${{ env.VERSION_TAG }}
      run: |
        if [ "${{ github.ref_name }}" == "develop" ]; then
          kubectl apply -f k8s/staging/deployment.yaml
        elif [ "${{ github.ref_name }}" == "main" ]; then
          kubectl apply -f k8s/production/deployment.yaml
        fi