name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        type: choice
        default: 'staging'
        options:
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set target branch based on environment
      id: set_branch
      run: |
        if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
          echo "TARGET_BRANCH=develop" >> $GITHUB_ENV
        elif [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
          echo "TARGET_BRANCH=main" >> $GITHUB_ENV
        else
          echo "Invalid environment: ${{ github.event.inputs.environment }}"
          exit 1
        fi

    - name: Check for submodule changes
      id: check_submodule
      run: |
        # Ensure submodules are updated
        git submodule update --init --recursive
        
        # Fetch the target branch
        git fetch origin $TARGET_BRANCH
        
        # Check out the target branch for submodules
        git checkout origin/$TARGET_BRANCH
        
        # Compare commit hashes
        LOCAL_HASH=$(git rev-parse HEAD)
        REMOTE_HASH=$(git rev-parse origin/$TARGET_BRANCH)
        
        if [ "$LOCAL_HASH" != "$REMOTE_HASH" ]; then
          echo "Submodule has changed in $TARGET_BRANCH branch."
          echo "SUBMODULE_CHANGED=true" >> $GITHUB_ENV
        else
          echo "No changes detected in $TARGET_BRANCH branch."
          echo "SUBMODULE_CHANGED=false" >> $GITHUB_ENV

    - name: Deploy to Kubernetes
      if: env.SUBMODULE_CHANGED == 'true'
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        if [[ "$TARGET_BRANCH" == "develop" ]]; then
          echo "Deploying to Staging Environment..."
          kubectl apply -f k8s/staging/deployment.yaml
        elif [[ "$TARGET_BRANCH" == "main" ]]; then
          echo "Deploying to Production Environment..."
          kubectl apply -f k8s/production/deployment.yaml
        fi

    - name: Notify of no deployment
      if: env.SUBMODULE_CHANGED == 'false'
      run: |
        echo "No changes detected. Skipping deployment."
