name: Deploy to Kubernetes

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'staging'
        options:
          - staging
          - production

jobs:
  check-submodule:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Check for submodule changes
      id: check_submodule
      run: |
        cd hello-world-api
        git fetch
        LOCAL=$(git rev-parse @)
        REMOTE=$(git rev-parse @{u})
        if [ "$LOCAL" != "$REMOTE" ]; then
          echo "Submodule has changed"
          echo "::set-output name=changed::true"
        else
          echo "No changes in submodule"
          echo "::set-output name=changed::false"
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-submodule
    if: needs.check-submodule.outputs.changed == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        BRANCH_NAME: ${{ env.BRANCH_NAME }}
        VERSION_TAG: ${{ env.VERSION_TAG }}
      run: |
        if [ "${{ github.ref_name }}" == "develop" ]; then
          kubectl apply -f k8s/staging/deployment.yaml
        elif [ "${{ github.ref_name }}" == "main" ]; then
          kubectl apply -f k8s/production/deployment.yaml
        fi